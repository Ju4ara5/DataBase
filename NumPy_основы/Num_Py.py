import numpy as np

np.array([1, 2, 3])  # [1 2 3]

list_2d = [[1, 1, 1], [2, 2, 2], [3, 3, 3]]
np.array(list_2d)  # [[1 1 1]
                   #  [2 2 2]
                   #  [3 3 3]]

np.arange(0, 11, 2)  # [ 0  2  4  6  8 10] (от, до, шаг)

np.zeros(3)  # [0. 0. 0.]    так же и с единицами np.ones(...)

np.zeros((3, 4))  # [[0. 0. 0. 0.]     так же и с единицами np.ones((..., ...))
                  #  [0. 0. 0. 0.]
                  #  [0. 0. 0. 0.]]

# равномерно расспределённое множество (математически) (старт, стоп, количество):
np.linspace(0, 5, 5)  # [0.   1.25 2.5  3.75 5.  ]
np.linspace(0, 10, 5)  # [ 0.   2.5  5.   7.5 10. ]

# identity matrix (с диагональю из 1, всё остальное 0)
np.eye(3)  # [[1. 0. 0.]
           #  [0. 1. 0.]
           #  [0. 0. 1.]]

# масивы из случайных чисел:
# от 0 до 1:
np.random.rand(3)  # [0.6354567  0.2914434  0.62299661]
np.random.rand(3, 5)  # [[0.06955112 0.33877502 0.32321209 0.00361137 0.46356407]
                      #  [0.75486135 0.25057312 0.2980435  0.20264467 0.280697  ]
                      #  [0.58604452 0.57540805 0.55667996 0.88718607 0.93081799]]

# целые числа:
np.random.randint(0, 50, 8)  # [16 14 34 48 32 22 47 47] (от, до, количество)

# создаём из 1-мерного масива 2-мерный:
arr1 = np.random.randint(0, 50, 20)
arr2 = np.arange(20)  # [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]
arr2.reshape(5, 4)  # вернёт 2-мерный масив 5x4 из элементов arr2
arr1.max()  # max число из масива arr1 (min так же)
arr1.argmax()  # вернет индекс макс числа из масива arr1 (min так же)
arr1.shape  # (20,) - 1-мерный масив из 20 элементов
            # если масив 2-мерный, вернёт 2 аргумента: (2, 10) - 2 строки, 10 столбцов

arr = np.arange(12).reshape(3, 4)  # [[ 0  1  2  3]  создаем 1-мерный массив [0, 1, ..., 11]
                                   #  [ 4  5  6  7]  и решэйп в 2-мерный
                                   #  [ 8  9 10 11]]
